{"version":3,"sources":["images/splashImage.jpeg","serviceWorker.js","Components/LandingPage.js","Components/AlertComponent.js","Components/LogIn.js","Components/SignUp.js","Components/SellQuantity.js","Components/BuyQuantity.js","Components/ReviewAlert.js","Components/ModalComponent.js","Components/UserInfo.js","Components/UserPortal.js","Components/ConfirmOrder.js","Components/ProtectedRoute.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","LandingPage","handleClick","e","target","textContent","setState","isSignUp","authType","state","toUserPortal","logInClick","signUpClick","isLogIn","this","to","pathname","className","onClick","color","width","height","alt","src","SplashImage","Component","AlertComponent","Alert","style","display","props","logInErrorMessage","show","setShow","variant","onClose","handleClose","dismissible","Heading","LogIn","handleShow","handleChange","event","name","value","handleSubmit","preventDefault","logInUser","axios","post","username","existingUsername","password","existingPassword","then","res","localStorage","setItem","data","id","userId","catch","err","response","detail","logInErrorText","renderAlert","newUsername","newPassword","errorMessage","onSubmit","class","for","type","onChange","placeholder","SignUp","handleNewUserSubmit","postNewUser","Form","SellQuantity","Group","as","Col","controlId","Label","Control","min","max","quantity","quantityChange","BuyQuantity","ReviewAlert","setAlertShow","ModalComponent","handleAlertClose","wallet","price","orderHeader","isConfirm","company","dynamicQuantity","symbol","action","setAction","isBuy","isSell","holdings","Modal","classname","onHide","Row","holding","sellSubmit","stocks","length","disabled","handleQueryChange","isSearching","isSymbol","handleHoldings","map","index","modalHoldings","handleBuyQuantity","stockName","sellIncrement","formatter","format","readOnly","Button","confirmRedirect","UserInfo","borderTop","loading","Spinner","animation","size","UserPortal","getExchange","get","exchange","companyName","latestPrice","status","clearFields","returnInterval","setInterval","clearInterval","getQuantity","firstObject","sellQuantity","parseId","parseInt","getItem","handleLogOut","clear","result","filter","isHoldings","current","handleQuantityChange","handleBuySellChange","handleSellShow","setSell","getUserInfo","balance","getDatabaseStocks","a","stocksResponse","item","newResult","obj","sampleStock","push","addPrices","getSellQuantity","decimalFormatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","renderHoldings","stock","key","buySubmit","renderModalHoldings","parseFloat","showError","stockname","isClose","ConfirmOrder","cancel","putStockTransaction","parseUserId","put","postNewDepositTransaction","deposit","redirect","deleteStockRecord","postNewWithdrawalTransaction","withdrawal","addStockRecord","isError","ProtectedRoute","component","ReactDOM","render","path","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.f1c9b1fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/splashImage.a735ad8c.jpeg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\nimport SplashImage from \"../images/splashImage.jpeg\";\nimport { Redirect } from \"react-router-dom\";\nimport { User } from \"react-feather\";\n\nclass LandingPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      toUserPortal: false,\n      logInClick: false,\n      signUpClick: false,\n      isLogIn: false,\n      isSignUp: false,\n      authType: \"\",\n    };\n  }\n\n  handleClick = (e) => {\n    if (e.target.textContent === \"Start an account\")\n      this.setState({\n        isSignUp: true,\n      });\n\n    this.setState({\n      authType: e.target.textContent,\n    });\n  };\n\n  render() {\n    if (this.state.authType === \"Log in\") {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/log-in\",\n            state: {\n              isLogIn: this.state.isLogIn,\n            },\n          }}\n        />\n      );\n    }\n    if (this.state.authType === \"Start an account\") {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/sign-up\",\n            state: {\n              isSignUp: this.state.isSignUp,\n            },\n          }}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"container-fluid min-vh-100 d-flex flex-column\">\n          <div className=\"row flex-grow-1 landing-row\">\n            <div className=\"col-lg d-block mx-auto left-col\">\n              <h1 className=\"text-left welcome-text\">\n                Welcome to Trade<span className=\"topia-color\">Topia</span>\n              </h1>\n              <h3 className=\"text-left second-description-text\">\n                A make believe stock trading resource.\n              </h3>\n              <h4 className=\"mb-5 text-left description-text\">\n                A fun and simple way to practice trading and selling from public\n                companies: with no strings attached.\n              </h4>\n\n              <button\n                className=\"d-inline-block btn btn-outline-success my-2 my-sm-0 landing-page-buttons\"\n                onClick={(e) => this.handleClick(e)}\n              >\n                <User\n                  className=\"ml-2 d-inline-block user-icon\"\n                  color=\"white\"\n                  width=\"15\"\n                  height=\"15\"\n                />\n                <span className=\"log-in-button-text\">Log in</span>\n              </button>\n\n              <button\n                className=\"d-inline-block btn btn-outline-success mr-3 my-2 my-sm-0 landing-page-buttons\"\n                onClick={(e) => this.handleClick(e)}\n              >\n                <span className=\"account-button-text\">Start an account</span>\n              </button>\n            </div>\n            <div className=\"col-lg d-block mx-auto right-col\">\n              <img alt=\"stock market graph\" className=\"splash-image d-block mx-auto\" src={SplashImage} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import React, { Component } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\n\nclass AlertComponent extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  render() {\n      return (\n        <div className=\"d-block container\">\n        <Alert\n          style={{\n            display: this.props.logInErrorMessage !== \"\" ? \"block\" : \"none\",\n          }}\n          show={this.props.setShow}\n          className=\"d-block\"\n          variant=\"danger\"\n          onClose={this.props.handleClose}\n          dismissible\n        >\n          <Alert.Heading>Whoops! You forgot something.</Alert.Heading>\n          <p>{this.props.logInErrorMessage}</p>\n        </Alert>\n      </div>\n      )\n  }\n}\n\nexport default AlertComponent;\n","import React, { Component } from \"react\";\nimport { Key } from \"react-feather\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport AlertComponent from \"./AlertComponent\";\n\nclass LogIn extends Component {\n  constructor() {\n    super();\n    this.state = {\n      newUsername: \"\",\n      newPassword: \"\",\n      existingUsername: \"\",\n      existingPassword: \"\",\n      errorMessage: \"\",\n      logInErrorMessage: \"\",\n      toUserPortal: false,\n      setShow: false,\n    };\n  }\n\n  handleShow = () => {\n    if (this.state.logInErrorMessage !== \"\") {\n      this.setState({ setShow: true });\n    }\n  };\n\n  handleClose = () => {\n    this.setState({\n      setShow: false,\n      logInErrorMessage: \"\",\n    });\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n      errorMessage: \"\",\n      logInMessage: \"\",\n      logInErrorMessage: \"\",\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.logInUser();\n  };\n\n  logInUser = () => {\n    axios\n      .post(\"/api/authorize\", {\n        username: this.state.existingUsername,\n        password: this.state.existingPassword,\n      })\n      .then((res) => {\n        localStorage.setItem(\"session_id\", res.data.id);\n        localStorage.setItem(\"user_id\", res.data.userId);\n        this.setState({\n          toUserPortal: true,\n        });\n      })\n      .catch((err) => {\n        if (err.response.data.detail === \"empty username and password\") {\n          this.setState({\n            logInErrorMessage: \"Please enter a username and password.\",\n            setShow: true,\n          });\n        }\n\n        if (err.response.data.detail === \"empty username\") {\n          this.setState({\n            logInErrorMessage: \"Please enter a username.\",\n            setShow: true,\n          });\n        }\n\n        if (err.response.data.detail === \"empty password\") {\n          this.setState({\n            logInErrorMessage: \"Please enter a password.\",\n            setShow: true,\n          });\n        }\n\n        if (err.response.data.detail === \"false username\") {\n          this.setState({\n            logInErrorMessage:\n              \"The username you chose is already taken. Please try another entry.\",\n            setShow: true,\n          });\n        }\n\n        if (err.response.data.detail === \"username doesn't exist\") {\n          this.setState({\n            logInErrorMessage:\n              \"This username does not exist. Please enter an existing username.\",\n            setShow: true,\n          });\n        }\n        if (err.response.data.detail === \"wrong credentials\") {\n          this.setState({\n            logInErrorMessage: \"Username or password combination is invalid.\",\n            setShow: true,\n          });\n        }\n      });\n  };\n\n  logInErrorText = () => {\n    if (this.state.logInErrorMessage === \"\") {\n      return true;\n    }\n  };\n\n  renderAlert = () => {\n    if (this.state.logInErrorMessage !== \"\") {\n      return (\n        <AlertComponent\n          setShow={this.state.setShow}\n          handleClose={this.handleClose}\n          logInErrorMessage={this.state.logInErrorMessage}\n        />\n      );\n    }\n  };\n\n  render() {\n    if (this.state.toUserPortal === true) return <Redirect to=\"/\" />;\n\n    return (\n      <div className=\"container-fluid log-in-container\">\n        <header className=\"text-center log-in-header\">\n          <Key className=\"mx-auto d-block key-icon\" />\n          <h2 className=\"mt-2 log-in-text\">Log in</h2>\n        </header>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-5 input-col\">\n            <form onSubmit={this.handleSubmit}>\n              <div class=\"form-group\">\n                <label className=\"label-text\" for=\"\">\n                  User Id\n                </label>\n                <input\n                  type=\"input\"\n                  className=\"form-control username-input\"\n                  onChange={this.handleChange}\n                  placeholder=\"\"\n                  name=\"existingUsername\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label className=\"label-text\" for=\"exampleFormControlInput1\">\n                  Password\n                </label>\n                <input\n                  type=\"input\"\n                  className=\"form-control username-input\"\n                  onChange={this.handleChange}\n                  placeholder=\"\"\n                  name=\"existingPassword\"\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-lg mt-4 btn-block log-in-button\"\n              >\n                Log in\n              </button>\n            </form>\n          </div>\n          {this.renderAlert()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;\n","import React, { Component } from \"react\";\nimport { BarChart } from \"react-feather\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport AlertComponent from \"./AlertComponent\";\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      newUsername: \"\",\n      newPassword: \"\",\n      existingUsername: \"\",\n      existingPassword: \"\",\n      errorMessage: \"\",\n      logInErrorMessage: \"\",\n      toUserPortal: false,\n      setShow: false,\n    };\n  }\n\n  handleClose = () => {\n    this.setState({\n      setShow: false,\n      logInErrorMessage: \"\",\n    });\n  };\n\n  handleShow = () => {\n    if (this.state.logInErrorMessage !== \"\") {\n      this.setState({ setShow: true });\n    }\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n      errorMessage: \"\",\n      logInErrorMessage: \"\",\n    });\n  };\n\n  handleNewUserSubmit = (e) => {\n    e.preventDefault();\n    this.postNewUser();\n  };\n\n  postNewUser = () => {\n    axios\n      .post(\"/api/register\", {\n        username: this.state.newUsername,\n        password: this.state.newPassword,\n      })\n      .then((res) => {\n        localStorage.setItem(\"session_id\", res.data.id);\n        localStorage.setItem(\"user_id\", res.data.userId);\n        this.setState({\n          toUserPortal: true,\n        });\n      })\n      .catch((err) => {\n        if (err.response.data.detail === \"empty username and password\") {\n          this.setState({\n            logInErrorMessage: \"Please enter a username and password.\",\n            setShow: true,\n          });\n        }\n        if (err.response.data.detail === \"empty username\") {\n          this.setState({\n            logInErrorMessage: \"Please choose a username.\",\n            setShow: true,\n          });\n        }\n        if (err.response.data.detail === \"empty password\") {\n          this.setState({\n            logInErrorMessage: \"Please choose a password.\",\n            setShow: true,\n          });\n        }\n        if (err.response.data.detail === \"redundant username\") {\n          this.setState({\n            logInErrorMessage:\n              \"The username you chose is already taken.  Please try another entry.\",\n            setShow: true,\n          });\n        }\n      });\n  };\n\n  renderAlert = () => {\n    if (this.state.logInErrorMessage !== \"\") {\n      return (\n        <AlertComponent\n          setShow={this.state.setShow}\n          handleClose={this.handleClose}\n          logInErrorMessage={this.state.logInErrorMessage}\n        />\n      );\n    }\n  };\n\n  render() {\n    if (this.state.toUserPortal === true) return <Redirect to=\"/\" />;\n\n    return (\n      <div className=\"container-fluid log-in-container\">\n        <header className=\"text-center log-in-header\">\n          <BarChart className=\"mx-auto d-block key-icon\" />\n          <h2 className=\"mt-2 log-in-text\">Sign Up</h2>\n        </header>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-5 input-col\">\n            <Form onSubmit={this.handleNewUserSubmit}>\n              <div class=\"form-group\">\n                <label className=\"label-text\" for=\"\">\n                  Choose Username\n                </label>\n                <input\n                  type=\"input\"\n                  className=\"form-control username-input\"\n                  placeholder=\"\"\n                  name=\"newUsername\"\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div class=\"form-group\">\n                <label className=\"label-text\" for=\"exampleFormControlInput1\">\n                  Choose Password\n                </label>\n                <input\n                  type=\"password\"\n                  className=\"form-control username-input\"\n                  placeholder=\"\"\n                  name=\"newPassword\"\n                  onChange={this.handleChange}\n                />\n              </div>{\" \"}\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-lg mt-4 btn-block log-in-button\"\n              >\n                Start trading now!\n              </button>\n            </Form>\n          </div>\n          {this.renderAlert()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\n\nclass SellQuantity extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  render() {\n    return (\n      <div>\n        <Form>\n          <Form.Group as={Col} controlId=\"formGridZip\" className=\"quanity-col\">\n            <Form.Label className=\"ml-5 mt-3 mb-0\">Share quantity</Form.Label>\n            <Form.Control\n              type=\"number\"\n              min=\"1\"\n              max={this.props.quantity}\n              className=\"w-50 ml-5 d-inline-block modal-input\"\n              name=\"quantity\"\n              onChange={this.props.quantityChange}\n            />\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SellQuantity;\n","import React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\n\nclass BuyQuantity extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <Form>\n          <Form.Group as={Col} controlId=\"formGridZip\" className=\"quanity-col\">\n            <Form.Label className=\"ml-5 mt-3 mb-0\">Share quantity</Form.Label>\n            <Form.Control\n              type=\"number\"\n              min=\"1\"\n              max=\"100\"\n              className=\"w-50 ml-5 d-inline-block modal-input\"\n              name=\"quantity\"\n              onChange={this.props.onChange}\n            />\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default BuyQuantity;\n","import React, { Component } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\n\nclass ReviewAlert extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"d-block container review-container\">\n        <Alert\n        className=\"review-alert\"\n          show={this.props.setAlertShow}\n          onClose={this.props.handleClose}\n          style={{\n            display:\n              this.props.errorMessage !== \"\"\n                ? \"block\"\n                : \"none\",\n          }}\n          variant=\"danger\"\n        >\n          {this.props.errorMessage}\n        </Alert>\n      </div>\n    );\n  }\n}\n\nexport default ReviewAlert;\n","import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport SellQuantity from \"./SellQuantity\";\nimport BuyQuantity from \"./BuyQuantity\";\nimport ReviewAlert from \"./ReviewAlert\";\nimport { Redirect } from \"react-router-dom\";\nimport { CheckCircle } from \"react-feather\";\nimport { XCircle } from \"react-feather\";\n\nclass ModalComponent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      orderHeader: \"\",\n      errorMessage: \"\",\n      setShow: false,\n    };\n  }\n\n  renderAlert = () => {\n    if (this.props.errorMessage !== \"\") {\n      return (\n        <ReviewAlert\n          handleClose={this.handleAlertClose}\n          wallet={this.props.wallet}\n          price={this.props.price}\n          errorMessage={this.props.errorMessage}\n          setAlertShow={this.props.setAlertShow}\n        />\n      );\n    }\n  };\n\n  handleAlertClose = () => {\n    this.setState({\n      setShow: false,\n      errorMessage: \"\",\n    });\n  };\n\n  render() {\n    if (this.props.isConfirm) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/confirm\",\n            state: {\n              company: this.props.company,\n              quantity: this.props.dynamicQuantity,\n              price: this.props.price,\n              symbol: this.props.symbol,\n              action: this.props.setAction,\n              isBuy: this.props.isBuy,\n              isSell: this.props.isSell,\n              holdings: this.props.holdings,\n            },\n          }}\n        />\n      );\n    }\n    return (\n      <div>\n        {\" \"}\n        <Modal\n          classname=\"purchase-modal\"\n          show={this.props.show}\n          onHide={this.props.onHide}\n        >\n          <Form.Row>\n            <div\n              className=\"ml-3 mt-5\"\n              style={{\n                display:\n                  this.props.isSell || this.props.isBuy ? \"block\" : \"none\",\n              }}\n            >\n              <h4 className=\"text-center ml-3\">\n                {!this.props.isBuy ? \"Sell\" : \"Buy\"}{\" \"}\n                {this.props.holding.company} shares\n              </h4>\n            </div>\n\n            <Form.Group\n              style={{\n                display:\n                  !this.props.isSell && !this.props.isBuy ? \"block\" : \"none\",\n              }}\n              as={Col}\n              controlId=\"formGridState\"\n            >\n              <Form.Label className=\"ml-5 mb-0 mt-5\">Action</Form.Label>\n              {this.props.sellSubmit === false ? (\n                <Form.Control\n                  as=\"select\"\n                  className=\"ml-5 mt-0 modal-input w-50\"\n                  name=\"action\"\n                  onChange={this.props.handleChange}\n                >\n                  <option>Buy</option>\n                  {this.props.stocks.length === 0 ? (\n                    <option disabled>Sell</option>\n                  ) : (\n                    <option>Sell</option>\n                  )}\n                </Form.Control>\n              ) : (\n                <Form.Control\n                  as=\"select\"\n                  className=\"ml-5 mt-0 modal-input w-50\"\n                  name=\"action\"\n                  onChange={this.props.handleChange}\n                ></Form.Control>\n              )}\n            </Form.Group>\n\n            <Form.Group\n              style={{\n                display:\n                  !this.props.isSell && !this.props.isBuy ? \"block\" : \"none\",\n              }}\n              as={Col}\n              controlId=\"formGridZip\"\n            >\n              {this.props.setAction === \"Buy\" ? (\n                <Form className=\"search-form\">\n                  <Form.Label className=\"mt-5 mb-0\">\n                    Search by company symbol\n                  </Form.Label>\n                  <Form.Control\n                    type=\"input\"\n                    name=\"symbol\"\n                    className=\"text-uppercase w-75 modal-input\"\n                    onChange={this.props.handleQueryChange}\n                  />\n                  <CheckCircle\n                    style={{\n                      display:\n                        !this.props.isSearching &&\n                        this.props.isSymbol === \"Known symbol\"\n                          ? \"block\"\n                          : \"none\",\n                    }}\n                    className=\"search-icon\"\n                  />\n                  <XCircle\n                    style={{\n                      display:\n                        !this.props.isSearching &&\n                        this.props.isSymbol === \"Unknown symbol\"\n                          ? \"block\"\n                          : \"none\",\n                    }}\n                    className=\"x-icon\"\n                  />\n                  <h6 className=\"d-block ml-1 mt-1 result-text\">\n                    {this.props.company}\n                  </h6>{\" \"}\n                </Form>\n              ) : (\n                <Form>\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label className=\"current-label\">\n                      Current Holdings\n                    </Form.Label>\n                    <Form.Control\n                      type=\"hidden\"\n                      onChange={(event) => this.props.handleHoldings(event)}\n                      name=\"stockName\"\n                      as=\"select\"\n                    >\n                      {this.props.stocks.map((index) =>\n                        this.props.modalHoldings(index)\n                      )}\n                    </Form.Control>\n                  </Form.Group>\n                </Form>\n              )}\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            {this.props.setAction === \"Buy\" || this.props.isBuy ? (\n              <BuyQuantity\n                onChange={this.props.handleBuyQuantity}\n                quantity={this.props.quantity}\n                symbol={this.props.symbol}\n              />\n            ) : (\n              <SellQuantity\n                onChange={this.props.quantityChange}\n                stocks={this.props.stocks}\n                stockName={this.props.stockName}\n                quantity={this.props.quantity}\n                quantityChange={this.props.quantityChange}\n                sellIncrement={this.props.sellIncrement}\n              />\n            )}\n            <Form.Group className=\"mb-0\" as={Col} controlId=\"formGridZip\">\n              <Form.Label className=\"ml-1 mt-3 mb-0\">Total</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"price\"\n                value={\n                  this.props.isSymbol === \"Unknown symbol\"\n                    ? \"$\" + this.props.formatter().format(0)\n                    : \"$\" +\n                      this.props\n                        .formatter()\n                        .format(this.props.dynamicQuantity * this.props.price)\n                }\n                className=\"w-50 ml-1 modal-input\"\n                readOnly\n              />\n            </Form.Group>\n            {this.renderAlert()}\n          </Form.Row>\n          <hr />\n          <h6 className=\"text-center\">\n            Your Order is not complete yet. Review and confirm your order in the\n            next step.\n          </h6>\n          <Button\n            className=\"d-inline-block mx-auto review-button\"\n            variant=\"secondary\"\n            onClick={this.props.confirmRedirect}\n          >\n            Review Order\n          </Button>{\" \"}\n          <Button\n            onClick={(e) => this.props.onHide(e)}\n            className=\"d-inline-block mx-auto cancel-button\"\n            variant=\"danger\"\n          >\n            Cancel Order\n          </Button>{\" \"}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalComponent;\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass UserInfo extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return (\n        <div className=\"container-fluid d-block container user-container\">\n          <div className=\"d-block row\">\n            <h4 className=\"d-inline-block ml-3 mr-3 heading-text\">\n              User Information\n            </h4>\n            <Button\n              onClick={this.props.handleShow}\n              className=\"buy-sell-button\"\n              variant=\"success\"\n            >\n              <span className=\"font-weight-light\">Buy/Sell Stocks</span>\n            </Button>{\" \"}\n            <hr style={{ borderTop: \"1px solid #1aac3c\", width: \"100%\" }} />\n            <div className=\"col-12\">\n              <h6 className=\"font-weight-normal d-inline-block mb-1 titles-text\">\n                User{\" \"}\n              </h6>\n              <h6 className=\"font-weight-light d-block mb-2 name-text\">\n                {this.props.loading ? (\n                  <Spinner\n                    className=\"ml-2\"\n                    variant=\"success\"\n                    animation=\"border\"\n                    size=\"sm\"\n                  />\n                ) : (\n                  this.props.username\n                )}\n              </h6>\n              <h6\n                id=\"holdings\"\n                className=\"font-weight-normal d-inline-block mb-1 titles-text\"\n              >\n                Holdings:\n              </h6>\n              <h6\n                id=\"holding-text\"\n                className=\"font-weight-light d-block mb-2 name-text\"\n              >\n                $\n                {this.props.loading ? (\n                  <Spinner\n                    className=\"ml-2\"\n                    variant=\"success\"\n                    animation=\"border\"\n                    size=\"sm\"\n                  />\n                ) : (\n                  this.props.formatter().format(this.props.holdings)\n                )}\n              </h6>\n            </div>\n            <div className=\"col-5\">\n              <h6\n                id=\"wallet\"\n                className=\"font-weight-normal d-inline-block mb-1 titles-text\"\n              >\n                Wallet\n              </h6>\n              <h6 className=\"font-weight-light name-text mb-2\">\n                $\n                {this.props.loading ? (\n                  <Spinner\n                    className=\"ml-2\"\n                    variant=\"success\"\n                    animation=\"border\"\n                    size=\"sm\"\n                  />\n                ) : (\n                  this.props.formatter().format(this.props.wallet)\n                )}\n              </h6>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default UserInfo;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport ModalComponent from \"./ModalComponent\";\nimport UserInfo from \"./UserInfo\";\n\nclass UserPortal extends Component {\n  constructor() {\n    super();\n    this.state = {\n      sampleStock: [],\n      quantity: 0,\n      dynamicQuantity: 0,\n      price: 0,\n      holding: [],\n      firstObject: [],\n      action: \"\",\n      stocks: [],\n      sellQuantity: 1,\n      stockName: \"\",\n      username: \"\",\n      wallet: 0,\n      balance: 0,\n      holdings: 0,\n      symbol: \"\",\n      errorMessage: \"\",\n      setShow: false,\n      isSell: false,\n      isBuy: false,\n      sellSubmit: false,\n      loading: false,\n      isSearching: false,\n      isSymbol: \"\",\n      company: \"\",\n      showError: \"\",\n      setAlertShow: false,\n      isConfirm: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getUserInfo();\n    this.getDatabaseStocks();\n  }\n\n  getExchange = () => {\n    if (this.state.symbol !== \"\") {\n      axios\n        .get(\"/api/stocks/exchanges/\" + this.state.symbol, {})\n        .then((res) => {\n          this.setState({\n            exchange: res.data,\n            company: res.data.companyName,\n            price: res.data.latestPrice,\n          });\n          if (res.data === \"Unknown symbol\") {\n            this.setState({\n              isSymbol: \"Unknown symbol\",\n            });\n          } else {\n            this.setState({\n              isSymbol: \"Known symbol\",\n            });\n          }\n        })\n        .catch((err) => {\n          if (err.response.status === 404) {\n            this.clearFields();\n            this.setState({\n              isSymbol: \"Unknown symbol\",\n              price: 0,\n            });\n          }\n        });\n    }\n  };\n\n  handleQueryChange = (event) => {\n    this.clearFields();\n    this.setState({\n      isSearching: true,\n    });\n    let returnInterval;\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n      errorMessage: \"\",\n    });\n    returnInterval = setInterval(() => {\n      this.getExchange();\n      if (returnInterval !== null) {\n        clearInterval(returnInterval);\n        this.setState({\n          isSearching: false,\n        });\n      }\n      return returnInterval;\n    }, 2000);\n    this.setState({\n      isSearching: false,\n    });\n  };\n\n  getQuantity = () => {\n    this.setState({\n      firstObject: this.state.stocks[0],\n    });\n    if (this.state.action === \"Sell\") {\n      this.setState({\n        sellQuantity: this.state.firstObject.quantity,\n      });\n    }\n  };\n\n  parseId = () => {\n    let parseUserId = parseInt(localStorage.getItem(\"user_id\"));\n    return parseUserId;\n  };\n\n  handleLogOut = (event) => {\n    let deleteId = localStorage.clear();\n    return deleteId;\n  };\n\n  handleHoldings = (event, index) => {\n    const result = this.state.stocks.filter(\n      (name) => name.company === event.target.value\n    );\n    this.setState({\n      sellQuantity: result[0].quantity,\n      isHoldings: true,\n      price: result[0].current,\n      company: result[0].company,\n      symbol: result[0].symbol,\n    });\n  };\n\n  handleBuyQuantity = (event) => {\n    const { value } = event.target;\n    this.setState({\n      dynamicQuantity: parseInt(value),\n      errorMessage: \"\",\n    });\n  };\n\n  handleQuantityChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: this.state.sellQuantity,\n    });\n    this.setState({\n      dynamicQuantity: parseInt(value),\n    });\n  };\n\n  clearFields = () => {\n    this.setState({\n      sellQuantity: 0,\n      price: 0,\n      company: \"\",\n      dynamicQuantity: 0,\n      isSymbol: \"\",\n      isSearching: false,\n    });\n  };\n\n  handleBuySellChange = (event) => {\n    this.clearFields();\n    this.setState({\n      action: event.target.value,\n      sellQuantity: this.state.firstObject.quantity,\n      price: this.state.firstObject.current,\n      company: this.state.firstObject.company,\n      symbol: this.state.firstObject.symbol,\n    });\n    if (event.target.value === \"Buy\") {\n      this.setState({\n        company: \"\",\n      });\n    }\n  };\n\n  handleShow = () => {\n    this.setState({\n      setShow: true,\n      action: \"Buy\",\n      sellSubmit: false,\n    });\n  };\n\n  handleSellShow = () => {\n    this.setState({\n      setShow: true,\n      action: \"Sell\",\n      sellSubmit: true,\n    });\n  };\n\n  handleClose = (e) => {\n    this.clearFields();\n    this.setState({\n      setShow: false,\n      setSell: true,\n      isSell: false,\n      isBuy: false,\n      price: 0,\n      company: \"\",\n      errorMessage: \"\",\n    });\n  };\n\n  getUserInfo = () => {\n    axios\n      .post(\"/api/update-portal\", {\n        userId: this.parseId(),\n      })\n      .then((res) => {\n        this.setState({\n          username: res.data.username,\n          wallet: res.data.balance,\n          holdings: res.data.holdings,\n        });\n      });\n  };\n\n  getDatabaseStocks = async (index) => {\n    this.setState({\n      loading: true,\n    });\n    const stocksResponse = await axios.post(\"/api/update-portal/stocks\", {\n      userId: this.parseId(),\n    });\n\n    this.setState({\n      stocks: stocksResponse.data,\n    });\n    for (const item of stocksResponse.data) {\n      const newResult = await axios.get(\"/api/stocks/exchanges/\" + item.symbol);\n      const obj = { [\"current\"]: newResult.data.latestPrice };\n      this.state.sampleStock.push(obj);\n    }\n\n    const addPrices = this.state.stocks.map((price, index) => {\n      return { ...price, current: this.state.sampleStock[index].current };\n    });\n    this.setState({\n      stocks: addPrices,\n    });\n    this.getQuantity();\n    this.setState({\n      loading: false,\n    });\n  };\n\n  getSellQuantity = () => {\n    const filter = this.state.stocks.filter(\n      (name) => name.company === this.state.stockName\n    );\n\n    this.setState({\n      sellQuantity: filter[0].quantity,\n      loading: false,\n    });\n  };\n\n  decimalFormatter = () => {\n    const formatter = new Intl.NumberFormat(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n    return formatter;\n  };\n\n  renderHoldings = (stock, index) => {\n    return (\n      <div key={index} className=\"holdings-render\">\n        <p className=\"mb-0 company-text\">{stock.company}</p>\n        <h6 className=\"font-weight-normal shares-current\">\n          <span\n            className=\"mt-1 d-block\"\n            style={{ color: \"rgb(233, 233, 233)\" }}\n          >\n            {stock.quantity} shares\n          </span>\n        </h6>\n        <h5 className=\"font-weight-light d-inline-block share-text\">\n          $\n          {this.state.loading ? (\n            <Spinner className=\"ml-2\" variant=\"success\" animation=\"border\" />\n          ) : (\n            this.decimalFormatter().format(stock.current * stock.quantity)\n          )}\n        </h5>\n        <Button\n          variant=\"outline-success\"\n          className=\"sell-button\"\n          onClick={(e) => this.sellSubmit(index)}\n        >\n          <span className=\"font-weight-light\">Sell shares</span>\n        </Button>\n        <Button\n          variant=\"outline-success\"\n          className=\"buy-button\"\n          onClick={(e) => this.buySubmit(index)}\n        >\n          <span className=\"font-weight-light\">Buy shares</span>\n        </Button>\n      </div>\n    );\n  };\n\n  sellSubmit = (index) => {\n    this.setState({\n      holding: this.state.stocks[index],\n      isBuy: false,\n      isSell: true,\n      action: \"Sell\",\n      sellQuantity: this.state.stocks[index].quantity,\n      price: this.state.stocks[index].current,\n      company: this.state.stocks[index].company,\n      symbol: this.state.stocks[index].symbol,\n    });\n    this.handleSellShow();\n  };\n\n  buySubmit = (index) => {\n    this.setState({\n      holding: this.state.stocks[index],\n      isSell: false,\n      isBuy: true,\n      action: \"Buy\",\n      sellQuantity: this.state.stocks[index].quantity,\n      price: this.state.stocks[index].current,\n      company: this.state.stocks[index].company,\n      symbol: this.state.stocks[index].symbol,\n    });\n    this.handleShow();\n  };\n\n  renderModalHoldings = (stock, index) => {\n    return (\n      <option key={index} value={stock.company}>\n        {stock.company} ({stock.quantity} shares)\n      </option>\n    );\n  };\n\n  confirmRedirect = (e) => {\n    if (\n      this.state.wallet <\n        parseFloat(this.state.price) * this.state.dynamicQuantity &&\n      !this.state.isSell &&\n      this.state.action === \"Buy\"\n    ) {\n      this.setState({\n        setAlertShow: true,\n        errorMessage:\n          \"Insufficient funds. Sell holdings or choose smaller share amount.\",\n      });\n    } else {\n      this.setState({\n        isConfirm: true,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid main-container\">\n        <Form onSubmit={(event) => this.handleLogOut(event)}>\n          <Button\n            type=\"submit\"\n            variant=\"outline-success\"\n            className=\"d-block ml-5 log-out-button\"\n          >\n            Log out\n          </Button>\n        </Form>\n        <UserInfo\n          handleShow={this.handleShow}\n          wallet={this.state.wallet}\n          holdings={this.state.holdings}\n          username={this.state.username}\n          loading={this.state.loading}\n          formatter={this.decimalFormatter}\n        />\n        <ModalComponent\n          action={this.state.action}\n          setAction={this.state.action}\n          isSell={this.state.isSell}\n          isBuy={this.state.isBuy}\n          show={this.state.setShow}\n          onHide={this.handleClose}\n          stocks={this.state.stocks}\n          stockName={this.state.stockname}\n          quantity={this.state.sellQuantity}\n          handleChange={this.handleBuySellChange}\n          sellSubmit={this.state.sellSubmit}\n          holding={this.state.holding}\n          formatter={this.decimalFormatter}\n          handleHoldings={this.handleHoldings}\n          modalHoldings={this.renderModalHoldings}\n          quantityChange={this.handleQuantityChange}\n          handleBuyQuantity={this.handleBuyQuantity}\n          dynamicQuantity={this.state.dynamicQuantity}\n          handleQueryChange={this.handleQueryChange}\n          company={this.state.company}\n          price={this.state.price}\n          symbol={this.state.symbol}\n          holdings={this.state.holdings}\n          isSearching={this.state.isSearching}\n          isSymbol={this.state.isSymbol}\n          wallet={this.state.wallet}\n          isClose={this.state.isClose}\n          setAlertShow={this.state.setAlertShow}\n          errorMessage={this.state.errorMessage}\n          confirmRedirect={this.confirmRedirect}\n          isConfirm={this.state.isConfirm}\n        />\n        <div className=\"container-fluid d-block holdings-container\">\n          <h4 className=\"heading-text\">Current Holdings</h4>\n          <hr style={{ borderTop: \"1px solid #1aac3c\", width: \"100%\" }} />\n          {this.state.stocks.map(this.renderHoldings)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserPortal;\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport AlertComponent from \"./AlertComponent\";\nimport BarLoader from \"react-spinners/BarLoader\";\n\nclass ConfirmOrder extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errorMessage: \"\",\n      cancel: false,\n      setShow: false,\n      isError: false,\n      redirect: false,\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleQuantityChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleAlertClose = () => {\n    this.setState({\n      setShow: false,\n    });\n  };\n\n  handleClose = (e) => {\n    this.setState({\n      cancel: true,\n    });\n  };\n\n  putStockTransaction = () => {\n    let parseUserId = parseInt(localStorage.getItem(\"user_id\"));\n    if (\n      this.props.location.state.action === \"Buy\" ||\n      this.props.location.state.isBuy\n    ) {\n      axios\n        .put(\"/api/transaction/buy\", {\n          userId: parseUserId,\n          balance:\n            this.props.location.state.price *\n            this.props.location.state.quantity,\n        })\n\n        .catch((err) => {\n          if (err.response.data.detail === \"insufficient balance\") {\n            this.setState({\n              errorMessage:\n                \"You have insufficient funds for this purpose. Please try another order.\",\n              setShow: true,\n            });\n          }\n        });\n    }\n    if (\n      this.props.location.state.action === \"Sell\" ||\n      this.props.location.state.isSell\n    ) {\n      axios\n        .put(\"/api/transaction/sell\", {\n          userId: parseUserId,\n          balance:\n            this.props.location.state.price *\n            this.props.location.state.quantity,\n        })\n        .catch((err) => {});\n    }\n  };\n\n  postNewDepositTransaction = () => {\n    this.setState({\n      loading: true,\n    });\n    this.putStockTransaction();\n    let parseUserId = parseInt(localStorage.getItem(\"user_id\"));\n    axios\n      .post(\"/api/transaction/sell\", {\n        userId: parseUserId,\n        deposit:\n          this.props.location.state.price * this.props.location.state.quantity,\n        quantity: this.props.location.state.quantity,\n        exchange: this.props.location.state.symbol,\n      })\n      .then((res) => {\n        if (res.status === 200) {\n          this.setState({\n            loading: false,\n            redirect: true,\n          });\n        }\n      })\n      .catch((err) => {});\n    this.deleteStockRecord();\n  };\n\n  postNewWithdrawalTransaction = () => {\n    this.setState({\n      loading: true,\n    });\n    this.putStockTransaction();\n    let parseUserId = parseInt(localStorage.getItem(\"user_id\"));\n    axios\n      .post(\"/api/transaction/buy\", {\n        userId: parseUserId,\n        withdrawal:\n          this.props.location.state.price * this.props.location.state.quantity,\n        quantity: this.props.location.state.quantity,\n        exchange: this.props.location.state.symbol,\n      })\n      .then((res) => {\n        if (res.status === 200) {\n          this.setState({\n            loading: false,\n            redirect: true,\n          });\n        }\n      })\n      .catch((err) => {});\n    this.addStockRecord();\n  };\n\n  addStockRecord = () => {\n    if (!this.state.isError) {\n      let parseUserId = parseInt(localStorage.getItem(\"user_id\"));\n      axios.post(\"/api/transaction/add-stock\", {\n        userId: parseUserId,\n        company: this.props.location.state.company,\n        symbol: this.props.location.state.symbol,\n        quantity: this.props.location.state.quantity,\n      });\n    }\n  };\n\n  deleteStockRecord = () => {\n    let parseUserId = parseInt(localStorage.getItem(\"user_id\"));\n    axios.post(\"/api/transaction/delete-stock\", {\n      userId: parseUserId,\n      company: this.props.location.state.company,\n      symbol: this.props.location.state.symbol,\n      quantity: this.props.location.state.quantity,\n    });\n  };\n\n  decimalFormatter = () => {\n    const formatter = new Intl.NumberFormat(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n    return formatter;\n  };\n\n  renderAlert = () => {\n    if (this.state.errorMessage !== \"\") {\n      return (\n        <AlertComponent\n          setShow={this.state.setShow}\n          handleClose={(e) => this.handleAlertClose(e)}\n          logInErrorMessage={this.state.errorMessage}\n        />\n      );\n    }\n  };\n\n  render() {\n    if (this.state.cancel || this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/user-portal\",\n          }}\n        />\n      );\n    }\n    const { loading } = this.state;\n    return (\n      <div>\n        <h2 className=\"mt-5 ml-5\">{}</h2>\n        <h6 className=\"font-weight-normal text-center ml-5\">\n          {this.props.location.state.company}\n          <span>( </span>\n          <span className=\"text-uppercase special-characters\">\n             {this.props.location.state.symbol} \n          </span>\n          <span> )</span>\n        </h6>\n        <h6 className=\"font-weight-normal text-center ml-5\">\n          Quantity\n          {this.props.location.state.isSell ||\n          this.props.location.state.action === \"Sell\"\n            ? \" Sold\"\n            : \"\"}\n          : {this.props.location.state.quantity}\n        </h6>\n        <h6 className=\"font-weight-normal text-center ml-5\">\n          Price: $\n          {this.decimalFormatter().format(this.props.location.state.price)}\n        </h6>\n        <h2 className=\"text-center mt-5 ml-5\">Order Summary</h2>\n        <h6 className=\"font-weight-bold text-center mt-2 ml-5\">\n          Subtotal:\n          <span className=\"font-weight-normal text-center confirm-span\">\n            ${this.props.location.state.price} x{\" \"}\n            {this.props.location.state.quantity} (\n            <span className=\"special-characters\"> shares </span>) = $\n            {this.decimalFormatter().format(\n              this.props.location.state.quantity *\n                this.props.location.state.price\n            )}\n          </span>\n        </h6>\n        <hr></hr>\n        <h5 className=\"text-center ml-5\">\n          Total:\n          <span className=\"font-weight-normal text-center confirm-span\">\n            $\n            {this.decimalFormatter().format(\n              this.props.location.state.quantity *\n                this.props.location.state.price\n            )}\n          </span>\n        </h5>\n        <Button\n          className=\"mt-4 confirm-button\"\n          variant=\"secondary\"\n          onClick={\n            this.props.location.state.action === \"Buy\"\n              ? this.postNewWithdrawalTransaction\n              : this.postNewDepositTransaction\n          }\n        >\n          Confirm\n        </Button>{\" \"}\n        <Button\n          onClick={this.props.onHide}\n          className=\"d-inline-block mx-auto cancel-button\"\n          variant=\"danger\"\n          onClick={(e) => this.handleClose(e)}\n        >\n          Cancel\n        </Button>{\" \"}\n        {this.renderAlert()}\n        <div className=\"container-fluid\">\n          {loading ? (\n            <div>\n              <p className=\"mt-3 text-center\">\n                Processing order... Redirecting to User Portal.\n              </p>{\" \"}\n              <BarLoader />\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ConfirmOrder;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nclass ProtectedRoute extends Component {\n  render() {\n      const Component = this.props.component;\n      const isAuthenticated = localStorage.getItem(\"session_id\");\n\n      return isAuthenticated !== null ? (\n          <Component />\n      ) : (\n          <Redirect to={{ pathname: \"/landing-page\" }}/>\n      )\n  }\n}\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport LandingPage from \"./Components/LandingPage\";\nimport LogIn from \"./Components/LogIn\";\nimport SignUp from \"./Components/SignUp\";\nimport UserPortal from \"./Components/UserPortal\";\nimport ConfirmOrder from \"./Components/ConfirmOrder\";\nimport ProtectedRoute from \"./Components/ProtectedRoute\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/confirm\" render={(props) => <ConfirmOrder {...props} />} />\n      <Route path=\"/sign-up\" render={(props) => <SignUp {...props} />} />\n      <Route path=\"/log-in\" render={(props) => <LogIn {...props} />} />\n      <Route path=\"/landing-page\" component={LandingPage} />\n      <ProtectedRoute exact={true} path=\"/\" component={UserPortal} />\n      <ProtectedRoute component={UserPortal} />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}